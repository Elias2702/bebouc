{"version":3,"sources":["../../../src/server/Controllers/User.js"],"names":["User","require","bcrypt","saltRounds","LocalStorage","localStorage","list","req","res","find","sort","name","then","users","json","catch","err","console","log","create","body","email","password","status","text","hash","user","surname","admin","findUser","Promise","resolve","reject","findOne","er","result","_u","save","usr","token","getToken","error","login","authenticate","isChecked","setItem","auth","edit","findByIdAndUpdate","params","id","new","send","destroy","findById","remove","success","exports"],"mappings":"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","sourcesContent":["const User = require(\"../Models/User.js\");\n// crypt password\nconst bcrypt = require(\"bcryptjs\");\nconst saltRounds = 10;\nconst LocalStorage = require(\"node-localstorage\").LocalStorage;\nconst localStorage = new LocalStorage(\"./scratch\");\n\nconst list = (req, res) => {\n    User.find()\n        .sort({name: 1})\n        .then(users => res.json(users))\n        .catch(err => {\n            console.log(err);\n        });\n};\n\nconst create = (req, res) => {\n    if (!req.body.email || !req.body.password) {\n        res.status(400).json({\n            text: \"Invalid Request\",\n        });\n    } else {\n        bcrypt.hash(req.body.password, saltRounds, (err, hash) => {\n            if (err) {\n                return err;\n            }\n\n            let user = {\n                    name: req.body.name,\n                    surname: req.body.surname,\n                    admin: req.body.admin,\n                    email: req.body.email,\n                    password: hash,\n                },\n                findUser = new Promise((resolve, reject) => {\n                    User.findOne(\n                        {\n                            email: user.email,\n                        },\n                        (er, result) => {\n                            if (er) {\n                                reject(500);\n                            } else if (result) {\n                                res.status(204).json({\n                                    text: \"User already exists\",\n                                });\n                            } else {\n                                resolve(true);\n                            }\n                        },\n                    );\n                });\n\n            findUser.then(\n                () => {\n                    let _u = new User(user);\n\n                    _u.save((er, usr) => {\n                        if (er) {\n                            res.status(500).json({\n                                text: \"Internal error\",\n                            });\n                        } else {\n                            res.status(200).json({\n                                text: \"Succes\",\n                                token: usr.getToken(),\n                            });\n\n                        }\n                    });\n                },\n                error => {\n                    switch (error) {\n                        case 500:\n                            res.status(500).json({\n                                text: \"Internal error\",\n                            });\n                            break;\n                        case 204:\n                            res.status(204).json({\n                                text: \"Email already exists\",\n                            });\n                            break;\n                        default:\n                            res.status(500).json({\n                                text: \"Internal error\",\n                            });\n                    }\n                },\n            );\n        });\n    }\n};\n\nconst login = (req, res) => {\n    if (!req.body.email || !req.body.password) {\n        res.status(400).json({\n            text: \"Invalid request\",\n        });\n    } else {\n        User.findOne(\n            {\n                email: req.body.email,\n            },\n            (err, user) => {\n                if (err) {\n                    res.status(500).json({\n                        text: \"Internal error\",\n                    });\n                } else if (!user) {\n                    res.status(401).json({\n                        text: \"User does not exist\",\n                    });\n                } else {\n                    user.authenticate(req.body.password, isChecked => {\n                        if (isChecked) {\n                            let token = user.getToken();\n\n                            localStorage.setItem(\"token\", token);\n\n                            req.body.password = \"\";\n\n                            res.status(200).json({\n                                auth: true,\n                                text: \"Authentification\",\n                                token: token,\n                            });\n                        } else {\n                            res.status(401).json({\n                                text: \"Password incorrects\",\n                            });\n                        }\n                    });\n                }\n            },\n        );\n    }\n    return;\n};\n\nconst edit = (req, res) => {\n    User.findByIdAndUpdate(req.params.id, req.body, {new: true})\n        .then(user => res.json(user))\n        .catch(err => res.status(400).send(err));\n};\n\nconst destroy = (req, res) => {\n    User.findById(req.params.id)\n        .then(user => user.remove().then(() => res.json({success: true})))\n        .catch(err => res.status(404).json(err));\n};\n\n// Exporting methods\nexports.list = list;\nexports.login = login;\nexports.create = create;\nexports.edit = edit;\nexports.destroy = destroy;\n"],"file":"User.js"}